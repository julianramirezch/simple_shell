.TH _printf 1.0
.SH NAME
_printf - _printf recreates the primary functions of printf
.SH SYNOPSIS
#include "holberton.h"

int _printf(const char *format, ...);
.SH
.B DESCRIPTION
_printf() - is a function is a powerful device for printing numbers and other things stored in variables. With this power there is a certain amount of complexity. Taken all at once, the complexity makes printf seem almost impossible to understand. But the complexity can be easily unfolded into simple features, including width, precision, signage, justification, and fill. By recognizing and understanding these features, printf will become a useful and friendly servant in your printing endeavors.

.TP
.B Compile

gcc -Wall -Werror -Wextra -pedantic *.c -o printf

.TP
.B Return Value

The return value of _printf is the number of characters printed, excluding the terminating NULL byte.

-1 is returned on falure.

.SH FORMATS

.TP
The character % is the conversion specifier and should be followed by the following characters:

.B i, d
Print positive and negative numbers.

.B c
Print characters, first is converted to an int ASCII and print the char.

.B s
Print strings , when the string is NULL print (null).

.B r
Prin th reverse of a string.

.B %
Print the character % .

.B R
Print string in rot13.

.B u
Print number as unsigned int.

.B x
Print number to hexadecimal in lowercase

.B X
Print number to hexadecimal in uppercase.

.B o
Print number to octal base.

.B b
Print number to binary decimal

.SH EXAMPLE
.B first example

#include "holberton.h"

int main(void)
{

	unsigned int unsignedempty = 12312312;

	_printf("Number: [%d]\n", -762534);

	_printf("Number: [%d]\n", unsignedempty);

	_printf("NUmber: [%d, %i]\n", 0000000000000001, 0000000000000001);

	return 0;

}

.B second example

#include "holberton.h"
int main(void)
{

	char c = 'c';
	_printf("String: [%s]\n", "Holberton School");

	_printf("Char: [%c]\n", c);

	_printf("String: [%s]\n", "H3ll0 W0rld");

	return 0;

}

.B third example

#include "holberton.h"
int main(void)
{

	int len = 2, i;

	_printf("Number: [%d]\n", len + 2);

	for(i = 0; i > 3; i++)
      	      _printf("Number: [%d]", i);

      return 0;

}

.SH GITHUB REPOSITORY
.RS
Visit : "https://github.com/julianramirezch/printf
.RE

.SH AUTHOR
Jairo Sandoval, Julian Ramirez